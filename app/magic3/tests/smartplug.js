

NRF.findDevices(function(devices) {
  console.log(devices);
}, 1000);



function sendPlugCommand(isOn) {
  const SERVICE_UUID = "0x180A";       // ŒåœÄœâœÇ ŒµŒØœáŒµœÇ œÄŒµŒπ
  const CHARACTERISTIC_UUID = "0x9C40"; // ŒåœÄœâœÇ ŒµŒØœáŒµœÇ œÄŒµŒπ
  const DEVICE_MAC = "7c:e7:12:52:f6:78 public";

  // Payload: aa aa 00 05 8d 03 e8 70 32 (ON) ŒÆ aa aa 00 05 da 03 e9 70 33 (OFF)
  /*const payload = isOn ? 
    new Uint8Array([170, 170, 0, 5, 141, 3, 232, 112, 50]) :
    new Uint8Array([170, 170, 0, 5, 218, 3, 233, 112, 51]);
  */
  // global.payload= [0xaa, 0xaa, 0x0, 0x15, 0x74, 0x0, 0x1e, 0x0, 0x13, 0x69, 0x24, 0x70, 0xb5, 0x36, 0x4b, 0x1c, 0x7f, 0x31, 0x7d, 0x38, 0x81, 0xb6, 0x6a, 0xf4, 0xfa];
  
  let gattConnection;
  let characteristic;

  NRF.connect(DEVICE_MAC)
    .then(gatt => {
      gattConnection = gatt;
      print("1. Œ£œÖŒΩŒ¥Œ≠Œ∏Œ∑Œ∫Œµ!");
      return gatt.getPrimaryService(SERVICE_UUID);
    })
    .then(service => {
      print("2. ŒíœÅŒ≠Œ∏Œ∑Œ∫Œµ service!");
      return service.getCharacteristic(CHARACTERISTIC_UUID);
    })
    .then(char => {
      characteristic = char;
      print("3. ŒïŒΩŒµœÅŒ≥ŒøœÄŒøŒØŒ∑œÉŒ∑ notifications...");
      return characteristic.startNotifications();
    })
    .then(() => {
      characteristic.on('characteristicvaluechanged', data => {
        //const response = new Uint8Array(data.buffer);
        const response = new Uint8Array(data.target.value.buffer);
        print("üîî ŒëœÄŒ¨ŒΩœÑŒ∑œÉŒ∑ Plug:", response);
        
        // ŒëŒΩŒ¨ŒªœÖœÉŒ∑ Œ±œÄŒ¨ŒΩœÑŒ∑œÉŒ∑œÇ (œÄ.œá., byte 6 = 0x32 Œ≥ŒπŒ± OFF, 0x29 Œ≥ŒπŒ± ON)
        //const status = response[6] === 0x29 ? "ON" : "OFF";
        //print("ŒöŒ±œÑŒ¨œÉœÑŒ±œÉŒ∑ Plug:", status);
      });

      print("4. ŒëœÄŒøœÉœÑŒøŒªŒÆ:", isOn ? "ON" : "OFF");
      print("Payload:", payload);
      return characteristic.writeValue(payload);
    })
    .then(() => {
      print("5. ŒïœÄŒπœÑœÖœáŒØŒ±! Œ†ŒµœÅŒπŒºŒ≠ŒΩœâ Œ±œÄŒ¨ŒΩœÑŒ∑œÉŒ∑...");
      setTimeout(() => {
        if (gattConnection) gattConnection.disconnect();
        print("6. Œó œÉœçŒΩŒ¥ŒµœÉŒ∑ Œ≠Œ∫ŒªŒµŒπœÉŒµ.");
      }, 5000);
    })
    .catch(err => {
      print("Œ£œÜŒ¨ŒªŒºŒ±:", err);
      if (gattConnection) gattConnection.disconnect();
    });
}



// ŒßœÅŒÆœÉŒ∑:
// sendPlugCommand(true);  // ON
// sendPlugCommand(false); // OFF
payload=[0xaa, 0xaa, 0x0, 0x5, 0x8d, 0x3, 0xe8, 0x70, 0x32];
payload=[0xaa, 0xaa, 0x0, 0x49, 0x1c, 0x3, 0xe9, 0x70, 0x34, 0x0, 0x13, 0x0, 0x40, 0x35, 0x65, 0x31, 0x33, 0x61, 0x64, 0x32, 0x61, 0x65, 0x61, 0x35, 0x34, 0x33, 0x36, 0x62, 0x31, 0x66, 0x35, 0x36, 0x64, 0x66, 0x30, 0x64, 0x65, 0x65, 0x66, 0x34, 0x33, 0x31, 0x35, 0x65, 0x61, 0x32, 0x37, 0x36, 0x38, 0x36, 0x34, 0x32, 0x37, 0x64, 0x65, 0x66, 0x62, 0x35, 0x35, 0x35, 0x35, 0x61, 0x61, 0x30, 0x63, 0x64, 0x39, 0x32, 0x30, 0x37, 0x37, 0x38, 0x65, 0x33, 0x61, 0x62, 0x62];
payload=[0xaa, 0xaa, 0x0, 0x15, 0x69, 0x3, 0xea, 0x70, 0x39, 0xea, 0x8c, 0x22, 0x80, 0xd9, 0x79, 0x96, 0x23, 0x20, 0xa1, 0x52, 0xb1, 0xef, 0xc5, 0xc3, 0x75]
payload=[0x2, 0x40, 0x0, 0x20, 0x0, 0x1c, 0x0, 0x4, 0x0, 0x12, 0x12, 0x0, 0xaa, 0xaa, 0x0, 0x15, 0x69, 0x3, 0xea, 0x70, 0x39, 0xea, 0x8c, 0x22, 0x80, 0xd9, 0x79, 0x96, 0x23, 0x20, 0xa1, 0x52, 0xb1, 0xef, 0xc5, 0xc3, 0x75];
payload=[0xaa, 0xaa, 0x0, 0x49, 0xb7, 0x3, 0xe9, 0x70, 0x34, 0x0, 0x13, 0x0, 0x40, 0x62, 0x35, 0x35, 0x61, 0x34, 0x62, 0x66, 0x36, 0x39, 0x30, 0x35, 0x30, 0x61, 0x30, 0x61, 0x36, 0x64, 0x37, 0x31, 0x39, 0x38, 0x34, 0x63, 0x34, 0x38, 0x35, 0x61, 0x65, 0x66, 0x35, 0x62, 0x37, 0x34, 0x62, 0x65, 0x30, 0x31, 0x61, 0x66, 0x39, 0x65, 0x66, 0x31, 0x33, 0x38, 0x33, 0x34, 0x62, 0x35, 0x61, 0x65, 0x63, 0x63, 0x64, 0x32, 0x31, 0x61, 0x37, 0x62, 0x34, 0x32, 0x38, 0x34, 0x30];
payload=[0xaa, 0xaa, 0x0, 0x15, 0xdd, 0x3, 0xea, 0x70, 0x39, 0x7c, 0xbf, 0x2b, 0x83, 0xc5, 0xf1, 0xd7, 0x8a, 0xfa, 0x65, 0x1, 0x22, 0x9d, 0x6, 0x1c, 0x6];
payload=[0xaa, 0xaa, 0x0, 0x5, 0x9e, 0x3, 0xeb, 0x70, 0x40];


payload=[0xaa, 0xaa, 0x0, 0x49, 0xb7, 0x3, 0xe9, 0x70, 0x34, 0x0, 0x13, 0x0, 0x40, 0x62, 0x35, 0x35, 0x61, 0x34, 0x62, 0x66, 0x36, 0x39, 0x30, 0x35, 0x30, 0x61, 0x30, 0x61, 0x36, 0x64, 0x37, 0x31, 0x39, 0x38, 0x34, 0x63, 0x34, 0x38, 0x35, 0x61, 0x65, 0x66, 0x35, 0x62, 0x37, 0x34, 0x62, 0x65, 0x30, 0x31, 0x61, 0x66, 0x39, 0x65, 0x66, 0x31, 0x33, 0x38, 0x33, 0x34, 0x62, 0x35, 0x61, 0x65, 0x63, 0x63, 0x64, 0x32, 0x31, 0x61, 0x37, 0x62, 0x34, 0x32, 0x38, 0x34, 0x30];
payload=[0xaa, 0xaa, 0x0, 0x15, 0xdd, 0x3, 0xea, 0x70, 0x39, 0x7c, 0xbf, 0x2b, 0x83, 0xc5, 0xf1, 0xd7, 0x8a, 0xfa, 0x65, 0x1, 0x22, 0x9d, 0x6, 0x1c, 0x6];
payload=[0xaa, 0xaa, 0x0, 0x5, 0x9e, 0x3, 0xeb, 0x70, 0x40];